@charset "UTF-8";
/* imports */
@import url("https://fonts.googleapis.com/css?family=Cinzel:900");
@import url("https://fonts.googleapis.com/css?family=Permanent+Marker");
/*--------------------------------

	Media Queries

	used for outputting content either between media query tags

	example: basic usage

	.element {
		width: 50%;

		@include mq('tablet-small') {
			width: 20%;
		}
	}

	example: using max-width

	.element {
		width: 50%;

		@include mq('tablet-small', 'max') {
			width: 20%;
		}
	}

*/
/*--------------------------------

	Margin / Padding Quick Resets

	example: top & bottom margin set to $spacing-unit
	.element {
		@include push--ends;
	}

	example: left & right padding set to $spacing-unit--small
	.element {
		@include soft--sides($spacing-unit--small);
	}

*/
/*--------------------------------

	Helper mixins

*/
/*--------------------------------

	Form input placeholder text

	example:

	input,
	textarea {
		@include input-placeholder {
			color: $grey;
		}
	}

*/
/*--------------------------------

	Retina images

	example:

	.element {
		@include retina {
			background-image: url(../img/background@2x.png);
		}
	}

*/
/*--------------------------------

	Content margins

	fore removing first/last child margins

	example: default
	.element {
		@include content-margins;
	}

	output:
	.element > *:first-child {
		margin-top: 0;
	}
	.element > *:last-child {
		margin-bottom: 0;
	}

	example: empty selector
	.element {
		@include content-margins('false');
	}

	output:
	.element:first-child {
		margin-top: 0;
	}
	.element:last-child {
		margin-bottom: 0;
	}

*/
/*--------------------------------

	CSS Triangle

	used for creating CSS only triangles

	example:
	.element {

		&::before {
			@include css-triangle(blue, down);
		}
	}

*/
/*--------------------------------

	Hide text

	example:

	.element {
		@include hide-text;
	}

*/
/*--------------------------------

	Responsive ratio

	Used for creating scalable elements that maintain the same ratio

	example:
	.element {
		@include responsive-ratio(400, 300);
	}

*/
/*--------------------------------

	Typography

	Text image replacement, with responsive ratio

	HTML:

	<h1 class="element">
		<span>Text to replace</span>
	</h1>

	example:
	.element {
		@include typography(200, 50, 'hello-world');
	}


*/
/*--------------------------------

	Icon

	For using fontastic icons in pseudo elements

*/
/*--------------------------------

	Colours

	background, colour, etc. match up with colour map in _variables.scss

	modify to suit per project

*/
/*--------------------------------

	Misc

*/
/*--------------------------------

	Fluid Property

	http://www.adrenalinmedia.com.au/the-agency/insights/this-changes-everything-css-fluid-properties.aspx

	HTML:

	<h1 class="element">
		<span>Text to replace</span>
	</h1>

	example:
	h1 {
		@include fp(font-size, 50, 100); // 50px at 320, 100px at 1920;
	}

	output:
	h1 {
		font-size: calc(3.125vw + 40px); //This is the magic!
	}

	@media (max-width:320px){ //Clips the start to the min value
		font-size:50px;
	}

	@media (min-width:1920px){ //Clips the end to the max value
		font-size:100px;
	}


*/
/* variaveis */
/* gerais */
.clearfix {
  overflow: auto;
  zoom: 1; }

body {
  max-width: 100%;
  margin: 0 0 1% 0;
  background-color: #ddd; }

/* Header */
header {
  text-align: center;
  background: linear-gradient(black, #402726);
  -webkit-animation: mymove 1s;
  animation: mymove 1s; }

header h1 {
  margin: 0;
  padding: 2% 2% 0% 2%;
  text-transform: uppercase;
  color: white;
  font-family: "Cinzel", serif;
  font-size: 4vw; }

header h2 {
  text-transform: capitalize;
  color: white;
  font-family: "Cinzel", serif;
  font-size: 1.7vw; }

/* Divisão das colunas */
#container {
  position: relative;
  display: block;
  width: 70%;
  margin: auto;
  margin: 0% 15% 0% 15%;
  background-color: white;
  box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.7);
  border-radius: 0 0 .5% .5%; }
  #container.placeholder {
    animation: mymove 3s; }
  #container:-moz-placeholder {
    animation: mymove 3s; }
  #container::-moz-placeholder {
    animation: mymove 3s; }
  #container:-ms-input-placeholder {
    animation: mymove 3s; }
  #container::-webkit-input-placeholder {
    animation: mymove 3s; }

@keyframes mymove {
  0% {
    transform: translateY(50%); }
  100% {
    transform: translateY(0); } }
.col {
  float: left; }

.col4 {
  width: 31.332%;
  padding: 1%; }

.col12 {
  width: 98%;
  padding: 1%; }

@media only screen and (max-width: 648px) {
  header h1 {
    font-size: 8vw; }

  header h2 {
    font-size: 3.4vw; }

  #container {
    position: relative;
    display: block;
    width: 80%;
    margin: auto;
    margin: 0% 10% 0% 10%;
    -webkit-animation: mymove 1s;
    animation: mymove 1s;
    background-color: white;
    box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.7);
    border-radius: 0 0 .5% .5%; }

  .col4 {
    width: 98%;
    padding: 1%; } }
@media (max-width: 1024px) and (min-width: 648px) {
  header h1 {
    font-size: 6vw; }

  header h2 {
    font-size: 2.55vw; }

  #container {
    position: relative;
    display: block;
    width: 90%;
    margin: auto;
    margin: 0% 5% 0% 5%;
    -webkit-animation: mymove 1s;
    animation: mymove 1s;
    background-color: white;
    box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.7);
    border-radius: 0 0 .5% .5%; }

  .col4 {
    width: 48%;
    padding: 1%; } }
/* Formatação dos filmes */
.filme, .filme img, .filme figcaption {
  border-radius: 2%; }

.filme {
  position: relative;
  text-align: center;
  border: 8px solid #fff;
  box-shadow: 1px 1px 4px #000; }

.filme img {
  width: 100%;
  height: 100%; }

.filme figcaption {
  position: absolute;
  top: 0px;
  box-sizing: border-box;
  width: 100%;
  height: 100%;
  padding: 10px;
  transition: opacity 0.5s;
  opacity: 0;
  color: white;
  background-color: rgba(0, 0, 0, 0.7); }

.filme figcaption p {
  font-family: "Permanent Marker", cursive;
  font-size: 210%; }

.filme figcaption:hover {
  opacity: 1; }

img, embed, object, video {
  max-width: 100%; }

/*# sourceMappingURL=style.css.map */
